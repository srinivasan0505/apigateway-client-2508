/*
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The integration type. The valid value is &lt;code&gt;HTTP&lt;/code&gt; for integrating an API method with an HTTP backend; &lt;code&gt;AWS&lt;/code&gt; with any AWS service endpoints; &lt;code&gt;MOCK&lt;/code&gt; for testing without actually invoking the backend; &lt;code&gt;HTTP_PROXY&lt;/code&gt; for integrating with the HTTP proxy integration; &lt;code&gt;AWS_PROXY&lt;/code&gt; for integrating with the Lambda proxy integration. 
 */
@JsonAdapter(IntegrationType.Adapter.class)
public enum IntegrationType {
  
  HTTP("HTTP"),
  
  AWS("AWS"),
  
  MOCK("MOCK"),
  
  HTTP_PROXY("HTTP_PROXY"),
  
  AWS_PROXY("AWS_PROXY");

  private String value;

  IntegrationType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static IntegrationType fromValue(String value) {
    for (IntegrationType b : IntegrationType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<IntegrationType> {
    @Override
    public void write(final JsonWriter jsonWriter, final IntegrationType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public IntegrationType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return IntegrationType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    IntegrationType.fromValue(value);
  }
}

