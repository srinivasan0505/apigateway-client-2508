/*
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CreateStageRequestCanarySettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateStageRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:10:54.869209+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class CreateStageRequest {
  public static final String SERIALIZED_NAME_STAGE_NAME = "stageName";
  @SerializedName(SERIALIZED_NAME_STAGE_NAME)
  @javax.annotation.Nonnull
  private String stageName;

  public static final String SERIALIZED_NAME_DEPLOYMENT_ID = "deploymentId";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_ID)
  @javax.annotation.Nonnull
  private String deploymentId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_CACHE_CLUSTER_ENABLED = "cacheClusterEnabled";
  @SerializedName(SERIALIZED_NAME_CACHE_CLUSTER_ENABLED)
  @javax.annotation.Nullable
  private Boolean cacheClusterEnabled;

  /**
   * Returns the size of the CacheCluster.
   */
  @JsonAdapter(CacheClusterSizeEnum.Adapter.class)
  public enum CacheClusterSizeEnum {
    _0_5("0.5"),
    
    _1_6("1.6"),
    
    _6_1("6.1"),
    
    _13_5("13.5"),
    
    _28_4("28.4"),
    
    _58_2("58.2"),
    
    _118("118"),
    
    _237("237");

    private String value;

    CacheClusterSizeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CacheClusterSizeEnum fromValue(String value) {
      for (CacheClusterSizeEnum b : CacheClusterSizeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CacheClusterSizeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CacheClusterSizeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CacheClusterSizeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CacheClusterSizeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CacheClusterSizeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CACHE_CLUSTER_SIZE = "cacheClusterSize";
  @SerializedName(SERIALIZED_NAME_CACHE_CLUSTER_SIZE)
  @javax.annotation.Nullable
  private CacheClusterSizeEnum cacheClusterSize;

  public static final String SERIALIZED_NAME_VARIABLES = "variables";
  @SerializedName(SERIALIZED_NAME_VARIABLES)
  @javax.annotation.Nullable
  private Map<String, String> variables = new HashMap<>();

  public static final String SERIALIZED_NAME_DOCUMENTATION_VERSION = "documentationVersion";
  @SerializedName(SERIALIZED_NAME_DOCUMENTATION_VERSION)
  @javax.annotation.Nullable
  private String documentationVersion;

  public static final String SERIALIZED_NAME_CANARY_SETTINGS = "canarySettings";
  @SerializedName(SERIALIZED_NAME_CANARY_SETTINGS)
  @javax.annotation.Nullable
  private CreateStageRequestCanarySettings canarySettings;

  public static final String SERIALIZED_NAME_TRACING_ENABLED = "tracingEnabled";
  @SerializedName(SERIALIZED_NAME_TRACING_ENABLED)
  @javax.annotation.Nullable
  private Boolean tracingEnabled;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private Map<String, String> tags = new HashMap<>();

  public CreateStageRequest() {
  }

  public CreateStageRequest stageName(@javax.annotation.Nonnull String stageName) {
    this.stageName = stageName;
    return this;
  }

  /**
   * The name for the Stage resource. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.
   * @return stageName
   */
  @javax.annotation.Nonnull
  public String getStageName() {
    return stageName;
  }

  public void setStageName(@javax.annotation.Nonnull String stageName) {
    this.stageName = stageName;
  }


  public CreateStageRequest deploymentId(@javax.annotation.Nonnull String deploymentId) {
    this.deploymentId = deploymentId;
    return this;
  }

  /**
   * The identifier of the Deployment resource for the Stage resource.
   * @return deploymentId
   */
  @javax.annotation.Nonnull
  public String getDeploymentId() {
    return deploymentId;
  }

  public void setDeploymentId(@javax.annotation.Nonnull String deploymentId) {
    this.deploymentId = deploymentId;
  }


  public CreateStageRequest description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the Stage resource.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public CreateStageRequest cacheClusterEnabled(@javax.annotation.Nullable Boolean cacheClusterEnabled) {
    this.cacheClusterEnabled = cacheClusterEnabled;
    return this;
  }

  /**
   * Whether cache clustering is enabled for the stage.
   * @return cacheClusterEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCacheClusterEnabled() {
    return cacheClusterEnabled;
  }

  public void setCacheClusterEnabled(@javax.annotation.Nullable Boolean cacheClusterEnabled) {
    this.cacheClusterEnabled = cacheClusterEnabled;
  }


  public CreateStageRequest cacheClusterSize(@javax.annotation.Nullable CacheClusterSizeEnum cacheClusterSize) {
    this.cacheClusterSize = cacheClusterSize;
    return this;
  }

  /**
   * Returns the size of the CacheCluster.
   * @return cacheClusterSize
   */
  @javax.annotation.Nullable
  public CacheClusterSizeEnum getCacheClusterSize() {
    return cacheClusterSize;
  }

  public void setCacheClusterSize(@javax.annotation.Nullable CacheClusterSizeEnum cacheClusterSize) {
    this.cacheClusterSize = cacheClusterSize;
  }


  public CreateStageRequest variables(@javax.annotation.Nullable Map<String, String> variables) {
    this.variables = variables;
    return this;
  }

  public CreateStageRequest putVariablesItem(String key, String variablesItem) {
    if (this.variables == null) {
      this.variables = new HashMap<>();
    }
    this.variables.put(key, variablesItem);
    return this;
  }

  /**
   * A map that defines the stage variables for the new Stage resource. Variable names can have alphanumeric and underscore characters, and the values must match &lt;code&gt;[A-Za-z0-9-._~:/?#&amp;amp;&#x3D;,]+&lt;/code&gt;.
   * @return variables
   */
  @javax.annotation.Nullable
  public Map<String, String> getVariables() {
    return variables;
  }

  public void setVariables(@javax.annotation.Nullable Map<String, String> variables) {
    this.variables = variables;
  }


  public CreateStageRequest documentationVersion(@javax.annotation.Nullable String documentationVersion) {
    this.documentationVersion = documentationVersion;
    return this;
  }

  /**
   * The version of the associated API documentation.
   * @return documentationVersion
   */
  @javax.annotation.Nullable
  public String getDocumentationVersion() {
    return documentationVersion;
  }

  public void setDocumentationVersion(@javax.annotation.Nullable String documentationVersion) {
    this.documentationVersion = documentationVersion;
  }


  public CreateStageRequest canarySettings(@javax.annotation.Nullable CreateStageRequestCanarySettings canarySettings) {
    this.canarySettings = canarySettings;
    return this;
  }

  /**
   * Get canarySettings
   * @return canarySettings
   */
  @javax.annotation.Nullable
  public CreateStageRequestCanarySettings getCanarySettings() {
    return canarySettings;
  }

  public void setCanarySettings(@javax.annotation.Nullable CreateStageRequestCanarySettings canarySettings) {
    this.canarySettings = canarySettings;
  }


  public CreateStageRequest tracingEnabled(@javax.annotation.Nullable Boolean tracingEnabled) {
    this.tracingEnabled = tracingEnabled;
    return this;
  }

  /**
   * Specifies whether active tracing with X-ray is enabled for the Stage.
   * @return tracingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTracingEnabled() {
    return tracingEnabled;
  }

  public void setTracingEnabled(@javax.annotation.Nullable Boolean tracingEnabled) {
    this.tracingEnabled = tracingEnabled;
  }


  public CreateStageRequest tags(@javax.annotation.Nullable Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateStageRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * The key-value map of strings. The valid character set is [a-zA-Z+-&#x3D;._:/]. The tag key can be up to 128 characters and must not start with &lt;code&gt;aws:&lt;/code&gt;. The tag value can be up to 256 characters.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable Map<String, String> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateStageRequest createStageRequest = (CreateStageRequest) o;
    return Objects.equals(this.stageName, createStageRequest.stageName) &&
        Objects.equals(this.deploymentId, createStageRequest.deploymentId) &&
        Objects.equals(this.description, createStageRequest.description) &&
        Objects.equals(this.cacheClusterEnabled, createStageRequest.cacheClusterEnabled) &&
        Objects.equals(this.cacheClusterSize, createStageRequest.cacheClusterSize) &&
        Objects.equals(this.variables, createStageRequest.variables) &&
        Objects.equals(this.documentationVersion, createStageRequest.documentationVersion) &&
        Objects.equals(this.canarySettings, createStageRequest.canarySettings) &&
        Objects.equals(this.tracingEnabled, createStageRequest.tracingEnabled) &&
        Objects.equals(this.tags, createStageRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stageName, deploymentId, description, cacheClusterEnabled, cacheClusterSize, variables, documentationVersion, canarySettings, tracingEnabled, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateStageRequest {\n");
    sb.append("    stageName: ").append(toIndentedString(stageName)).append("\n");
    sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    cacheClusterEnabled: ").append(toIndentedString(cacheClusterEnabled)).append("\n");
    sb.append("    cacheClusterSize: ").append(toIndentedString(cacheClusterSize)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("    documentationVersion: ").append(toIndentedString(documentationVersion)).append("\n");
    sb.append("    canarySettings: ").append(toIndentedString(canarySettings)).append("\n");
    sb.append("    tracingEnabled: ").append(toIndentedString(tracingEnabled)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("stageName");
    openapiFields.add("deploymentId");
    openapiFields.add("description");
    openapiFields.add("cacheClusterEnabled");
    openapiFields.add("cacheClusterSize");
    openapiFields.add("variables");
    openapiFields.add("documentationVersion");
    openapiFields.add("canarySettings");
    openapiFields.add("tracingEnabled");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("stageName");
    openapiRequiredFields.add("deploymentId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateStageRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateStageRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateStageRequest is not found in the empty JSON string", CreateStageRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateStageRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateStageRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateStageRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("stageName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stageName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stageName").toString()));
      }
      if (!jsonObj.get("deploymentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deploymentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deploymentId").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("cacheClusterSize") != null && !jsonObj.get("cacheClusterSize").isJsonNull()) && !jsonObj.get("cacheClusterSize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cacheClusterSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cacheClusterSize").toString()));
      }
      // validate the optional field `cacheClusterSize`
      if (jsonObj.get("cacheClusterSize") != null && !jsonObj.get("cacheClusterSize").isJsonNull()) {
        CacheClusterSizeEnum.validateJsonElement(jsonObj.get("cacheClusterSize"));
      }
      if ((jsonObj.get("documentationVersion") != null && !jsonObj.get("documentationVersion").isJsonNull()) && !jsonObj.get("documentationVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `documentationVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("documentationVersion").toString()));
      }
      // validate the optional field `canarySettings`
      if (jsonObj.get("canarySettings") != null && !jsonObj.get("canarySettings").isJsonNull()) {
        CreateStageRequestCanarySettings.validateJsonElement(jsonObj.get("canarySettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateStageRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateStageRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateStageRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateStageRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateStageRequest>() {
           @Override
           public void write(JsonWriter out, CreateStageRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateStageRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateStageRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateStageRequest
   * @throws IOException if the JSON string is invalid with respect to CreateStageRequest
   */
  public static CreateStageRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateStageRequest.class);
  }

  /**
   * Convert an instance of CreateStageRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

