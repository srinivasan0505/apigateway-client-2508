/*
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CreateDeploymentRequestCanarySettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateDeploymentRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:10:54.869209+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class CreateDeploymentRequest {
  public static final String SERIALIZED_NAME_STAGE_NAME = "stageName";
  @SerializedName(SERIALIZED_NAME_STAGE_NAME)
  @javax.annotation.Nullable
  private String stageName;

  public static final String SERIALIZED_NAME_STAGE_DESCRIPTION = "stageDescription";
  @SerializedName(SERIALIZED_NAME_STAGE_DESCRIPTION)
  @javax.annotation.Nullable
  private String stageDescription;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_CACHE_CLUSTER_ENABLED = "cacheClusterEnabled";
  @SerializedName(SERIALIZED_NAME_CACHE_CLUSTER_ENABLED)
  @javax.annotation.Nullable
  private Boolean cacheClusterEnabled;

  /**
   * Returns the size of the CacheCluster.
   */
  @JsonAdapter(CacheClusterSizeEnum.Adapter.class)
  public enum CacheClusterSizeEnum {
    _0_5("0.5"),
    
    _1_6("1.6"),
    
    _6_1("6.1"),
    
    _13_5("13.5"),
    
    _28_4("28.4"),
    
    _58_2("58.2"),
    
    _118("118"),
    
    _237("237");

    private String value;

    CacheClusterSizeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CacheClusterSizeEnum fromValue(String value) {
      for (CacheClusterSizeEnum b : CacheClusterSizeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CacheClusterSizeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CacheClusterSizeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CacheClusterSizeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CacheClusterSizeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CacheClusterSizeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CACHE_CLUSTER_SIZE = "cacheClusterSize";
  @SerializedName(SERIALIZED_NAME_CACHE_CLUSTER_SIZE)
  @javax.annotation.Nullable
  private CacheClusterSizeEnum cacheClusterSize;

  public static final String SERIALIZED_NAME_VARIABLES = "variables";
  @SerializedName(SERIALIZED_NAME_VARIABLES)
  @javax.annotation.Nullable
  private Map<String, String> variables = new HashMap<>();

  public static final String SERIALIZED_NAME_CANARY_SETTINGS = "canarySettings";
  @SerializedName(SERIALIZED_NAME_CANARY_SETTINGS)
  @javax.annotation.Nullable
  private CreateDeploymentRequestCanarySettings canarySettings;

  public static final String SERIALIZED_NAME_TRACING_ENABLED = "tracingEnabled";
  @SerializedName(SERIALIZED_NAME_TRACING_ENABLED)
  @javax.annotation.Nullable
  private Boolean tracingEnabled;

  public CreateDeploymentRequest() {
  }

  public CreateDeploymentRequest stageName(@javax.annotation.Nullable String stageName) {
    this.stageName = stageName;
    return this;
  }

  /**
   * The name of the Stage resource for the Deployment resource to create.
   * @return stageName
   */
  @javax.annotation.Nullable
  public String getStageName() {
    return stageName;
  }

  public void setStageName(@javax.annotation.Nullable String stageName) {
    this.stageName = stageName;
  }


  public CreateDeploymentRequest stageDescription(@javax.annotation.Nullable String stageDescription) {
    this.stageDescription = stageDescription;
    return this;
  }

  /**
   * The description of the Stage resource for the Deployment resource to create.
   * @return stageDescription
   */
  @javax.annotation.Nullable
  public String getStageDescription() {
    return stageDescription;
  }

  public void setStageDescription(@javax.annotation.Nullable String stageDescription) {
    this.stageDescription = stageDescription;
  }


  public CreateDeploymentRequest description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * The description for the Deployment resource to create.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public CreateDeploymentRequest cacheClusterEnabled(@javax.annotation.Nullable Boolean cacheClusterEnabled) {
    this.cacheClusterEnabled = cacheClusterEnabled;
    return this;
  }

  /**
   * Enables a cache cluster for the Stage resource specified in the input.
   * @return cacheClusterEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCacheClusterEnabled() {
    return cacheClusterEnabled;
  }

  public void setCacheClusterEnabled(@javax.annotation.Nullable Boolean cacheClusterEnabled) {
    this.cacheClusterEnabled = cacheClusterEnabled;
  }


  public CreateDeploymentRequest cacheClusterSize(@javax.annotation.Nullable CacheClusterSizeEnum cacheClusterSize) {
    this.cacheClusterSize = cacheClusterSize;
    return this;
  }

  /**
   * Returns the size of the CacheCluster.
   * @return cacheClusterSize
   */
  @javax.annotation.Nullable
  public CacheClusterSizeEnum getCacheClusterSize() {
    return cacheClusterSize;
  }

  public void setCacheClusterSize(@javax.annotation.Nullable CacheClusterSizeEnum cacheClusterSize) {
    this.cacheClusterSize = cacheClusterSize;
  }


  public CreateDeploymentRequest variables(@javax.annotation.Nullable Map<String, String> variables) {
    this.variables = variables;
    return this;
  }

  public CreateDeploymentRequest putVariablesItem(String key, String variablesItem) {
    if (this.variables == null) {
      this.variables = new HashMap<>();
    }
    this.variables.put(key, variablesItem);
    return this;
  }

  /**
   * A map that defines the stage variables for the Stage resource that is associated with the new deployment. Variable names can have alphanumeric and underscore characters, and the values must match &lt;code&gt;[A-Za-z0-9-._~:/?#&amp;amp;&#x3D;,]+&lt;/code&gt;.
   * @return variables
   */
  @javax.annotation.Nullable
  public Map<String, String> getVariables() {
    return variables;
  }

  public void setVariables(@javax.annotation.Nullable Map<String, String> variables) {
    this.variables = variables;
  }


  public CreateDeploymentRequest canarySettings(@javax.annotation.Nullable CreateDeploymentRequestCanarySettings canarySettings) {
    this.canarySettings = canarySettings;
    return this;
  }

  /**
   * Get canarySettings
   * @return canarySettings
   */
  @javax.annotation.Nullable
  public CreateDeploymentRequestCanarySettings getCanarySettings() {
    return canarySettings;
  }

  public void setCanarySettings(@javax.annotation.Nullable CreateDeploymentRequestCanarySettings canarySettings) {
    this.canarySettings = canarySettings;
  }


  public CreateDeploymentRequest tracingEnabled(@javax.annotation.Nullable Boolean tracingEnabled) {
    this.tracingEnabled = tracingEnabled;
    return this;
  }

  /**
   * Specifies whether active tracing with X-ray is enabled for the Stage.
   * @return tracingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTracingEnabled() {
    return tracingEnabled;
  }

  public void setTracingEnabled(@javax.annotation.Nullable Boolean tracingEnabled) {
    this.tracingEnabled = tracingEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDeploymentRequest createDeploymentRequest = (CreateDeploymentRequest) o;
    return Objects.equals(this.stageName, createDeploymentRequest.stageName) &&
        Objects.equals(this.stageDescription, createDeploymentRequest.stageDescription) &&
        Objects.equals(this.description, createDeploymentRequest.description) &&
        Objects.equals(this.cacheClusterEnabled, createDeploymentRequest.cacheClusterEnabled) &&
        Objects.equals(this.cacheClusterSize, createDeploymentRequest.cacheClusterSize) &&
        Objects.equals(this.variables, createDeploymentRequest.variables) &&
        Objects.equals(this.canarySettings, createDeploymentRequest.canarySettings) &&
        Objects.equals(this.tracingEnabled, createDeploymentRequest.tracingEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stageName, stageDescription, description, cacheClusterEnabled, cacheClusterSize, variables, canarySettings, tracingEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDeploymentRequest {\n");
    sb.append("    stageName: ").append(toIndentedString(stageName)).append("\n");
    sb.append("    stageDescription: ").append(toIndentedString(stageDescription)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    cacheClusterEnabled: ").append(toIndentedString(cacheClusterEnabled)).append("\n");
    sb.append("    cacheClusterSize: ").append(toIndentedString(cacheClusterSize)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("    canarySettings: ").append(toIndentedString(canarySettings)).append("\n");
    sb.append("    tracingEnabled: ").append(toIndentedString(tracingEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("stageName");
    openapiFields.add("stageDescription");
    openapiFields.add("description");
    openapiFields.add("cacheClusterEnabled");
    openapiFields.add("cacheClusterSize");
    openapiFields.add("variables");
    openapiFields.add("canarySettings");
    openapiFields.add("tracingEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateDeploymentRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateDeploymentRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateDeploymentRequest is not found in the empty JSON string", CreateDeploymentRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateDeploymentRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateDeploymentRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("stageName") != null && !jsonObj.get("stageName").isJsonNull()) && !jsonObj.get("stageName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stageName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stageName").toString()));
      }
      if ((jsonObj.get("stageDescription") != null && !jsonObj.get("stageDescription").isJsonNull()) && !jsonObj.get("stageDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stageDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stageDescription").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("cacheClusterSize") != null && !jsonObj.get("cacheClusterSize").isJsonNull()) && !jsonObj.get("cacheClusterSize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cacheClusterSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cacheClusterSize").toString()));
      }
      // validate the optional field `cacheClusterSize`
      if (jsonObj.get("cacheClusterSize") != null && !jsonObj.get("cacheClusterSize").isJsonNull()) {
        CacheClusterSizeEnum.validateJsonElement(jsonObj.get("cacheClusterSize"));
      }
      // validate the optional field `canarySettings`
      if (jsonObj.get("canarySettings") != null && !jsonObj.get("canarySettings").isJsonNull()) {
        CreateDeploymentRequestCanarySettings.validateJsonElement(jsonObj.get("canarySettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateDeploymentRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateDeploymentRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateDeploymentRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateDeploymentRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateDeploymentRequest>() {
           @Override
           public void write(JsonWriter out, CreateDeploymentRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateDeploymentRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateDeploymentRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateDeploymentRequest
   * @throws IOException if the JSON string is invalid with respect to CreateDeploymentRequest
   */
  public static CreateDeploymentRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateDeploymentRequest.class);
  }

  /**
   * Convert an instance of CreateDeploymentRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

