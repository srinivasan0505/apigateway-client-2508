/*
 * Amazon API Gateway
 * <fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>
 *
 * The version of the OpenAPI document: 2015-07-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.PutIntegrationRequestTlsConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PutIntegrationRequest
 */
public class PutIntegrationRequestTest {
    private final PutIntegrationRequest model = new PutIntegrationRequest();

    /**
     * Model tests for PutIntegrationRequest
     */
    @Test
    public void testPutIntegrationRequest() {
        // TODO: test PutIntegrationRequest
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'httpMethod'
     */
    @Test
    public void httpMethodTest() {
        // TODO: test httpMethod
    }

    /**
     * Test the property 'uri'
     */
    @Test
    public void uriTest() {
        // TODO: test uri
    }

    /**
     * Test the property 'connectionType'
     */
    @Test
    public void connectionTypeTest() {
        // TODO: test connectionType
    }

    /**
     * Test the property 'connectionId'
     */
    @Test
    public void connectionIdTest() {
        // TODO: test connectionId
    }

    /**
     * Test the property 'credentials'
     */
    @Test
    public void credentialsTest() {
        // TODO: test credentials
    }

    /**
     * Test the property 'requestParameters'
     */
    @Test
    public void requestParametersTest() {
        // TODO: test requestParameters
    }

    /**
     * Test the property 'requestTemplates'
     */
    @Test
    public void requestTemplatesTest() {
        // TODO: test requestTemplates
    }

    /**
     * Test the property 'passthroughBehavior'
     */
    @Test
    public void passthroughBehaviorTest() {
        // TODO: test passthroughBehavior
    }

    /**
     * Test the property 'cacheNamespace'
     */
    @Test
    public void cacheNamespaceTest() {
        // TODO: test cacheNamespace
    }

    /**
     * Test the property 'cacheKeyParameters'
     */
    @Test
    public void cacheKeyParametersTest() {
        // TODO: test cacheKeyParameters
    }

    /**
     * Test the property 'contentHandling'
     */
    @Test
    public void contentHandlingTest() {
        // TODO: test contentHandling
    }

    /**
     * Test the property 'timeoutInMillis'
     */
    @Test
    public void timeoutInMillisTest() {
        // TODO: test timeoutInMillis
    }

    /**
     * Test the property 'tlsConfig'
     */
    @Test
    public void tlsConfigTest() {
        // TODO: test tlsConfig
    }

}
